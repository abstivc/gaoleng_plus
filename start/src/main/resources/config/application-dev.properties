
env=DEV

#指定数据库的种类，这里 file意思是文件型数据库
spring.datasource.url=jdbc:mysql://192.168.209.138:3306/gl_support?useUnicode=true&characterEncoding=utf8
#用户名密码不需要改，都是临时值
spring.datasource.username=root
spring.datasource.password=abc123_
#指定Driver，有了Driver才能访问数据库
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#Apollo 配置
#Apollo 配置中心地址
apollo.meta=http://192.168.209.138:8080/
#指定使用某个集群下的配置
apollo.cluster=default
#是否开启 Apollo
apollo.bootstrap.enabled=true
#指定使用哪个 Namespace 的配置，默认 application
apollo.bootstrap.namespaces=application
#为了防止配置中心无法连接等问题，Apollo 会自动将配置本地缓存一份
apollo.cacheDir=D://Work/apolloSetting/
apollo.autoUpdateInjectedSpringProperties=true  
apollo.bootstrap.eagerLoad.enabled=true

# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=192.168.209.138
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=20
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=1000

#redis cluster
spring.redis.cache.clusterNodes=192.168.209.138:6379
spring.redis.cache.commandTimeout=5000
